name: Update README Dynamically
on:
  schedule:
    # Roda a cada hora
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Get Last Commit from GitHub API (Robust Version)
        id: last_commit
        run: |
          EVENT_DATA=$(curl -s "https://api.github.com/users/RenatofilhoDevandtech/events/public")
          LATEST_PUSH=$(echo "$EVENT_DATA" | jq '[.[] | select(.type=="PushEvent")][0]')

          if [[ "$LATEST_PUSH" == "null" ]]; then
            REPO_NAME="N/A"
            COMMIT_MESSAGE="Nenhum commit p√∫blico recente encontrado."
          else
            REPO_NAME=$(echo "$LATEST_PUSH" | jq -r '.repo.name')
            COMMIT_MESSAGE=$(echo "$LATEST_PUSH" | jq -r '.payload.commits[0].message | gsub("\"";"\\\"")')
          fi
          
          echo "repo_full_name=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

      - name: Ask AI to improve commit message
        id: commit_suggester
        run: |
          PROMPT="Aja como um desenvolvedor s√™nior. Reescreva a seguinte mensagem de commit para seguir o padr√£o Conventional Commits (ex: 'feat(auth): Adiciona login com Google'). Seja conciso, t√©cnico e retorne APENAS a mensagem sugerida, sem nenhum texto ou formata√ß√£o adicional. A mensagem √©: \"${{ steps.last_commit.outputs.message }}\""
          JSON_PAYLOAD=$(jq -n --arg prompt "$PROMPT" '{contents: [{parts: [{text: $prompt}]}]}')
          API_RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD")
          SUGGESTION=$(echo "$API_RESPONSE" | jq -r '.candidates[0].content.parts[0].text' | tr -d '\n' | tr -d '`' | sed 's/\"//g')
          
          if [[ -z "$SUGGESTION" ]]; then
            SUGGESTION="Sugest√£o indispon√≠vel no momento."
          fi
          
          echo "gemini_text=$SUGGESTION" >> $GITHUB_OUTPUT

      - name: Generate new content and update README
        env:
          REPO_FULL_NAME: ${{ steps.last_commit.outputs.repo_full_name }}
          COMMIT_MESSAGE: ${{ steps.last_commit.outputs.message }}
          AI_SUGGESTION: ${{ steps.commit_suggester.outputs.gemini_text }}
        run: |
          # Gera o novo conte√∫do em um arquivo tempor√°rio com o estilo de chat
          cat <<EOF > new_content.html
          <div style="border: 1px solid #30363d; border-radius: 8px; padding: 16px; font-family: sans-serif; margin: 16px 0;">
              <div style="margin-bottom: 12px;">
                  <p style="margin: 0 0 4px 0; font-size: 12px; color: #848d97;"><strong>Seu Commit em <a href="https://github.com/$REPO_FULL_NAME" style="color: #58a6ff; text-decoration: none;">$REPO_FULL_NAME</a>:</strong></p>
                  <pre style="background-color: #161b22; color: #c9d1d9; padding: 8px 12px; border-radius: 6px; margin: 0; white-space: pre-wrap; font-family: monospace;"><code>$COMMIT_MESSAGE</code></pre>
              </div>
              <div>
                  <p style="margin: 0 0 4px 0; font-size: 12px; color: #848d97;"><strong>ü§ñ Sugest√£o da IA:</strong></p>
                  <pre style="background-color: #1f6feb26; color: #c9d1d9; padding: 8px 12px; border-radius: 6px; margin: 0; white-space: pre-wrap; font-family: monospace;"><code>$AI_SUGGESTION</code></pre>
              </div>
          </div>
          EOF

          # Script Python "√† prova de falhas" que reconstr√≥i o README
          python -c "
          import os
          
          readme_path = 'README.md'
          start_marker = ''
          end_marker = ''
          
          with open('new_content.html', 'r') as f:
              new_content_body = f.read()
          
          new_readme_lines = []
          in_block = False
          with open(readme_path, 'r') as f:
              for line in f:
                  if start_marker in line:
                      new_readme_lines.append(line)
                      new_readme_lines.append(new_content_body + '\n')
                      in_block = True
                  elif end_marker in line:
                      new_readme_lines.append(line)
                      in_block = False
                  elif not in_block:
                      new_readme_lines.append(line)
          
          with open(readme_path, 'w') as f:
              f.writelines(new_readme_lines)
          "

      - name: Commit and push changes
        run: |
          if [[ -n "$(git status --porcelain README.md)" ]]; then
            git config --global user.name 'GitHub Actions Bot'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add README.md
            git commit -m "chore(readme): Update latest activity"
            git push
          else
            echo "README is already up to date."
          fi
